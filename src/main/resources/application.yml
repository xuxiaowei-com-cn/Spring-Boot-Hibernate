#
# 服务器 配置
server:
  # 端口
  port: 8080
#
# Spring Boot 配置
spring:
  #
  # 数据库 配置
  datasource:
    # 数据库 URL
    url: jdbc:oracle:thin:@192.168.8.128:1521:ORCL
    # 数据库 驱动名称（包括包名）
    driver-class-name: oracle.jdbc.driver.OracleDriver
    # 数据库 用户名
    username: scott
    # 数据库 密码
    password: orcl
  #
  # JPA 配置
  jpa:
    #
    # Hibernate 配置
    hibernate:
      # 默认值：
      # create：启动时删除上一次生成的表，并根据实体类生成表
      # create-drop：启东时根据实体类生成表，SessionFactory 关闭时表会被删除
      # update：启动时根据实体类生成表，当实体类属性变动时，表结构也会更新，在初期开发阶段使用此选项
      # validate：启动时验证数据库和实体类是否一致，在我们数据结构稳定时采用此选项
      # none：不采取任何措施
      ddl-auto: create
    #
    # 设置 Hibernate 操作数据库的时候在控制台打印真实的SQL
    show-sql: true
  #
  # 格式化
  jackson:
    # 序列化
    serialization:
      # 格式化控制台打印（SQL）
      indent_output: true
#
# MyBatis Plus 配置
mybatis-plus:
  # MyBatis Mapper 所对应的 XML 文件位置，如果您在 Mapper 中有自定义方法（XML 中有自定义实现），需要进行该配置，告诉 Mapper 所对应的 XML 文件位置。
  # 必须配置（否则出现：org.apache.ibatis.binding.BindingException: Invalid bound statement (not found)）
  mapper-locations: classpath:mapper/*.xml
  # MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名，注册后在 Mapper 对应的 XML 文件中可以直接使用类名，
  # 而不用使用全限定的类名（即 XML 中调用的时候不用包含包名）。
  type-aliases-package: cn.com.xuxiaowei.entity
  # 枚举类 扫描路径，如果配置了该属性，会将路径下的枚举类进行注入，让实体类字段能够简单快捷的使用枚举属性，
  # 具体使用请结合 枚举注入（https://mp.baomidou.com/guide/enum.html） 查看。
  type-enums-package: cn.com.xuxiaowei.enums
  global-config:
    db-config:
      # 逻辑已删除值,(逻辑删除下有效，默认值：1)
      logic-delete-value: 1
      # 逻辑未删除值,(逻辑删除下有效，默认值：0)
      logic-not-delete-value: 0
#
# 日志 配置
logging:
  level:
    web: debug
    cn.com.xuxiaowei: debug

